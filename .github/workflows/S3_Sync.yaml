name: GenAI Upload Repositories to S3 Workflow

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Do you have a single repository'
        required: true
        default: 'false'
        type: choice
        options:
          - true
          - false

      repository:
        type: string
        description: 'If you selected true, Enter GIT url in https format, else Enter the path of the csv/json file to clone multiple repositories in the following format file"//multirepo/{filename}.csv else provide repo name in the following format: org-name/{reponame}'

      branch:
        type: string
        description: 'Provide the branch name for single repository mode'
        default: 'master'

jobs:
  s3_sync_workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Cleaning Workspace
        run: rm -rf ./*

      - name: Checkout single repository
        if: ${{ inputs.action == 'true' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.branch }}
          token: ${{ secrets.REPO_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "${{ vars.AWS_REGION }}"

      - name: Create zip file
        id: zipfile
        run: |
          repo_name=$(echo "${{ github.repository }}" | cut -d '/' -f 2)
          echo "$repo_name=$repo_name" >> $GITHUB_OUTPUT
          echo $repo_name

          # Create a temporary directory if it does not exist
          if [ ! -d "temp" ]; then
          mkdir temp
          fi

          # Copy the repository files to the temporary Directory
          shopt -s extglob
          cp -R !(temp) temp/

          # Zip the repository files
          zip -r "${repo_name}.zip" temp/*

          # Clean up the temporary directory
          rm -rf temp/

      - name: Upload to S3
        run: aws s3 cp ${{ steps.zipfile.outputs.repo_name }}.zip s3://${{ vars.S3_BUCKET }}/Converted_repos/